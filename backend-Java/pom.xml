<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

<!--  1.1 extend parent project-->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.0</version>
  </parent>


  <groupId>com.musashi</groupId>
  <artifactId>big-event-EN</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>big-event-EN</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>

<!--    1.2 import spring boot starter web dependency-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
<!--    1.3 import mybatis dependency-->
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>3.0.3</version>
    </dependency>
<!--    1.4 import mysql driver dependency-->
    <dependency>
      <groupId>com.mysql</groupId>
      <artifactId>mysql-connector-j</artifactId>
    </dependency>
<!--import Lombok dependency, to generate setter,getter and toSting methods of entity classes in pojo folder
    during compilation.-->
      <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
          <version>1.18.32</version>
      </dependency>
<!--import validation starter dependency, for user&password string validation, add "@Validated"&"@Pattern"-->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-validation</artifactId>
      </dependency>
<!--import JWT dependency and spring boot starter tester dependency-->
      <dependency>
          <groupId>com.auth0</groupId>
          <artifactId>java-jwt</artifactId>
          <version>4.4.0</version>
      </dependency>
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-test</artifactId>
      </dependency>

<!-- MyBatis PageHelper for article paging -->
      <dependency>
          <groupId>com.github.pagehelper</groupId>
          <artifactId>pagehelper-spring-boot-starter</artifactId>
          <version>2.1.0</version>
      </dependency>

<!--import AWS S3 related dependencies-->
      <dependency>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-java-sdk-s3</artifactId>
          <version>1.12.749</version>
      </dependency>
<!--      To use amazon s3. otherwise
          error:if you are using Java 9+, you will need to include javax.xml.bind:jaxb-api  as a dependency. -->
      <dependency>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
          <version>4.0.5</version>
          <scope>runtime</scope>
      </dependency>
<!--AWS s3 dependencies commented begin-->
<!--      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.13</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>2.0.13</version>
    </dependency>-->

<!--  <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>s3</artifactId>
      <version>2.26.12</version>
  </dependency>
      <dependency>
          <groupId>software.amazon.awssdk</groupId>
          <artifactId>auth</artifactId>
          <version>2.26.12</version>
      </dependency>-->
 <!--AWS s3 dependencies commented end-->

<!--import redis starter dependency, then set "application.yml", for login JWT token management  -->
<!--      redis starter will be injected into IoC container as application starts -->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-data-redis</artifactId>
          <version>3.3.0</version>
      </dependency>

<!--    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>-->

  </dependencies>

  <build>
    <plugins> <!--run configurations from "application.yml" to test /test/RedisTest-->

      <plugin> <!-- To solve "A Java agent has been loaded dynamically (...\byte-buddy-agent-1.14.9.jar)"-->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
                <argLine>-XX:+EnableDynamicAgentLoading</argLine>
<!--                <useSystemClassLoader>false</useSystemClassLoader>-->
                <argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
            </configuration>
      </plugin>

      <!--import Maven packing plugin for project deploying-->
      <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>3.3.0</version>
      </plugin>

    </plugins>
  </build>

</project>
